def power(a, n):
    x = a
    for i in range(abs(n)):
        a *= x
    a /= x
    if n < abs(n):
        return(1 / a)
    else:
        return(a)
print(power(float(input()), int(input())))


def power(a, n):
    res = 1
    for i in range(abs(n)):
        res *= a
    if n >= 0:
        return res
    else:
        return 1 / res

print(power(float(input()), int(input())))


def power(a,n):
    if n==0:
        a=1
        print(a)
    elif n > 0:
        i=int(1)
        b=a
        while i<n:
            a*=b
            i+=1
        print(a)
    elif n < 0:
        i=int(-1)
        b=a
        while i>n:
            a*=b
            i-=1
        print(1/a)
a=float(input())
n=int(input())
power(a,n)


def power(a,n):
        return a ** n
print(power(float(input()),float(input())))


def power(a,n):
    b=1;
    if n==0:
        a=1
        return a 
    elif n>0:
        for i in range(1,n+1):
            b=b*a
        return b
    else:
        for i in range(1,abs(n)+1):
            b=b/a
        return b
print(power(float(input()),int(input())))


def power2(c1,c2):
    a=int(1)
    for i in range(c2):
        a=a*c1
    return a
    
def power(a, n):
    if n >0:
        return power2(a, n)
        
    elif n==0:
        return 1
    else:
        n=abs(n)
        return 1/power2(a, n)

a=float(input())
n=int(input())
print(power(a, n))

